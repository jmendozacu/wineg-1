<?xml version="1.0"?>
<config>
  <modules>
    <Spectrum_Validations>
      <version>0.1.0</version>
    </Spectrum_Validations>
  </modules>
  <global>
    <helpers>
      <validations>
        <class>Spectrum_Validations_Helper</class>
      </validations>
    </helpers>
	<resources>
	  <validations_setup>
		<setup>
		  <module>Spectrum_Validations</module>
		</setup>
		<connection>
		  <use>core_setup</use>
		</connection>
	  </validations_setup>
	  <validations_write>
		<connection>
		  <use>core_write</use>
		</connection>
	  </validations_write>
	  <validations_read>
		<connection>
		  <use>core_read</use>
		</connection>
	  </validations_read>
	</resources>
	    <fieldsets>
		<sales_convert_quote_item>
		    <test>
			<to_order_item>*</to_order_item>
		    </test>
		</sales_convert_quote_item>
	    </fieldsets>

	    <sales>
		<quote>
		    <item>
			<product_attributes>
			    <customer_shipping />
			</product_attributes>
		    </item>
		</quote>
	    </sales>
    <events>
	  <sales_quote_item_set_product> <!-- identifier of the event we want to catch -->
        <observers>
          <sales_quote_item_set_product_handler> <!-- identifier of the event handler -->
            <type>model</type> <!-- class method call type; valid are model, object and singleton -->
            <class>validations/observer</class> <!-- observers class alias -->
            <method>setTestAttribute</method>  <!-- observer's method to be called -->
            <args></args> <!-- additional arguments passed to observer -->
          </sales_quote_item_set_product_handler>
        </observers>
      </sales_quote_item_set_product>
    </events>
  </global>
</config> 